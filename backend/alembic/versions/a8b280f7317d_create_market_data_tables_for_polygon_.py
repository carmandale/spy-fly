"""Create market data tables for Polygon.io integration

Revision ID: a8b280f7317d
Revises:
Create Date: 2025-07-27 08:47:33.951794

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a8b280f7317d"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "api_requests_log",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("endpoint", sa.String(length=255), nullable=False),
        sa.Column("method", sa.String(length=10), nullable=False),
        sa.Column("status_code", sa.Integer(), nullable=True),
        sa.Column("response_time_ms", sa.Integer(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column(
            "timestamp",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_endpoint", "api_requests_log", ["endpoint"], unique=False)
    op.create_index(
        "idx_log_timestamp", "api_requests_log", ["timestamp"], unique=False
    )
    op.create_index(
        "idx_status_code", "api_requests_log", ["status_code"], unique=False
    )
    op.create_table(
        "historical_prices",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("symbol", sa.String(length=10), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("timeframe", sa.String(length=10), nullable=False),
        sa.Column("open_price", sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column("high_price", sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column("low_price", sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column("close_price", sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column("volume", sa.Integer(), nullable=False),
        sa.Column("vwap", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("source", sa.String(length=20), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "symbol", "date", "timeframe", name="uq_symbol_date_timeframe"
        ),
    )
    op.create_index(
        "idx_symbol_date", "historical_prices", ["symbol", "date"], unique=False
    )
    op.create_index("idx_timeframe", "historical_prices", ["timeframe"], unique=False)
    op.create_table(
        "market_data_cache",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("cache_key", sa.String(length=255), nullable=False),
        sa.Column("data_type", sa.String(length=50), nullable=False),
        sa.Column("raw_data", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cache_key"),
    )
    op.create_index("idx_cache_key", "market_data_cache", ["cache_key"], unique=False)
    op.create_index("idx_data_type", "market_data_cache", ["data_type"], unique=False)
    op.create_index("idx_expires_at", "market_data_cache", ["expires_at"], unique=False)
    op.create_table(
        "option_contracts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("symbol", sa.String(length=20), nullable=False),
        sa.Column("underlying", sa.String(length=10), nullable=False),
        sa.Column("strike", sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column("option_type", sa.String(length=4), nullable=False),
        sa.Column("expiration_date", sa.Date(), nullable=False),
        sa.Column("bid", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("ask", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("last_price", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("volume", sa.Integer(), nullable=True),
        sa.Column("open_interest", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("symbol", "timestamp", name="uq_symbol_timestamp"),
    )
    op.create_index(
        "idx_option_timestamp", "option_contracts", ["timestamp"], unique=False
    )
    op.create_index(
        "idx_strike_type", "option_contracts", ["strike", "option_type"], unique=False
    )
    op.create_index(
        "idx_underlying_expiration",
        "option_contracts",
        ["underlying", "expiration_date"],
        unique=False,
    )
    op.create_table(
        "spy_quotes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("symbol", sa.String(length=10), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column("bid", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("ask", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("volume", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("source", sa.String(length=20), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_symbol_timestamp", "spy_quotes", ["symbol", "timestamp"], unique=False
    )
    op.create_index("idx_timestamp", "spy_quotes", ["timestamp"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_timestamp", table_name="spy_quotes")
    op.drop_index("idx_symbol_timestamp", table_name="spy_quotes")
    op.drop_table("spy_quotes")
    op.drop_index("idx_underlying_expiration", table_name="option_contracts")
    op.drop_index("idx_strike_type", table_name="option_contracts")
    op.drop_index("idx_option_timestamp", table_name="option_contracts")
    op.drop_table("option_contracts")
    op.drop_index("idx_expires_at", table_name="market_data_cache")
    op.drop_index("idx_data_type", table_name="market_data_cache")
    op.drop_index("idx_cache_key", table_name="market_data_cache")
    op.drop_table("market_data_cache")
    op.drop_index("idx_timeframe", table_name="historical_prices")
    op.drop_index("idx_symbol_date", table_name="historical_prices")
    op.drop_table("historical_prices")
    op.drop_index("idx_status_code", table_name="api_requests_log")
    op.drop_index("idx_log_timestamp", table_name="api_requests_log")
    op.drop_index("idx_endpoint", table_name="api_requests_log")
    op.drop_table("api_requests_log")
    # ### end Alembic commands ###
