{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(touch:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(gh issue create:*)",
      "Bash(find:*)",
      "Bash(npm create:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(afplay:*)",
      "Bash(gh issue close:*)",
      "Bash(cp:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(timeout:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(chmod:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(git reset:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cat:*)",
      "Bash(python3:*)",
      "Bash(uv run:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(git checkout:*)",
      "Bash(python -m pytest tests/unit/test_config.py -v)",
      "Bash(python -m pytest tests/unit/test_config.py::test_polygon_api_key_validation -v)",
      "Bash(python -m pytest tests/unit/ -v)",
      "Bash(pytest:*)",
      "Bash(python -m pytest tests/unit/test_polygon_client.py::TestPolygonDataService -xvs)",
      "Bash(python -m pytest tests/unit/test_polygon_client.py::TestPolygonClient -xvs)",
      "Bash(python -m pytest tests/unit/test_polygon_client.py::TestPolygonClient::test_retry_on_transient_error -xvs)",
      "Bash(python -m pytest tests/unit/test_polygon_client.py -xvs)",
      "Bash(python -m pytest tests/unit/test_polygon_client.py -v)",
      "Bash(grep:*)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(sw_vers)",
      "Bash(cd:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh pr list:*)",
      "Bash(gh issue list:*)",
      "Bash(npm test)",
      "Bash(uv pip install:*)",
      "Bash(./start.sh:*)",
      "Bash(uv add:*)",
      "Bash(gh pr merge:*)",
      "Bash(git rebase:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr close:*)",
      "Bash(cd:*)",
      "Bash(ruff check:*)",
      "Bash(black:*)",
      "Bash(cd:*)",
      "Bash(npm run lint)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)"
    ],
    "deny": []
  }
}